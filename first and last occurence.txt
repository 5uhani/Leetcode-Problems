#include <vector>
using namespace std;

class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;

        int start = 0;
        int end = nums.size() - 1;
        int first_occurrence = -1;

        while (start <= end) {
            int mid = start + (end - start) / 2;

            if (nums[mid] == target) {
                first_occurrence = mid;
                end = mid - 1;
            } else if (target > nums[mid]) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }

        if (first_occurrence == -1) {
            ans.push_back(-1);
            ans.push_back(-1);
            return ans;
        }

        start = 0;
        end = nums.size() - 1;
        int last_occurrence = -1;

        while (start <= end) {
            int mid = start + (end - start) / 2;

            if (nums[mid] == target) {
                last_occurrence = mid;
                start = mid + 1;
            } else if (target > nums[mid]) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        
        ans.push_back(first_occurrence);
        ans.push_back(last_occurrence);

        return ans;
    }
};




